{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/misha/Desktop/miauth/pages/register.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nexport default function Register() {\n  const router = useRouter();\n  const {\n    0: error,\n    1: setError\n  } = useState(false);\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const {\n    email,\n    password,\n    name\n  } = formValues;\n\n  const onInputChange = e => {\n    setFormValues(prevFormValues => _objectSpread(_objectSpread({}, prevFormValues), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = () => {\n    formValues;\n    fetch('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(formValues),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      const result = await res.json();\n\n      if (res.status === 200) {\n        router.push('/login');\n      } else {\n        setError(JSON.stringify(result.error, null, 4));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onInputChange,\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onInputChange,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"name\",\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onInputChange,\n        type: \"text\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n} // export const getServerSideProps = async ctx => {\n//   const cookie = ctx.req?.headers.cookie\n//   console.log(cookie)\n//   // if (res.status === 401) {\n//   //   if (ctx.res) {\n//   //     ctx.res.setHeader('location', '/login')\n//   //     ctx.res.statusCode = 302\n//   //     return { props: {} }\n//   //   }\n//   // }\n//   return { props: {} }\n// }","map":{"version":3,"sources":["/Users/misha/Desktop/miauth/pages/register.jsx"],"names":["React","useState","useRouter","Register","router","error","setError","formValues","setFormValues","email","name","password","onInputChange","e","prevFormValues","target","value","onSubmit","fetch","method","body","JSON","stringify","headers","then","res","result","json","status","push"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACM,UAAD;AAAA,OAAaC;AAAb,MAA8BP,QAAQ,CAAC;AAC3CQ,IAAAA,KAAK,EAAE,EADoC;AAE3CC,IAAAA,IAAI,EAAE,EAFqC;AAG3CC,IAAAA,QAAQ,EAAE;AAHiC,GAAD,CAA5C;AAKA,QAAM;AAAEF,IAAAA,KAAF;AAASE,IAAAA,QAAT;AAAmBD,IAAAA;AAAnB,MAA4BH,UAAlC;;AAEA,QAAMK,aAAa,GAAGC,CAAC,IAAI;AACzBL,IAAAA,aAAa,CAACM,cAAc,oCACvBA,cADuB;AAE1B,OAACD,CAAC,CAACE,MAAF,CAASL,IAAV,GAAiBG,CAAC,CAACE,MAAF,CAASC;AAFA,MAAf,CAAb;AAID,GALD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrBV,IAAAA,UAAU;AACVW,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACrBC,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,UAAf,CAFe;AAGrBgB,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHY,KAAlB,CAAL,CAIGC,IAJH,CAIQ,MAAMC,GAAN,IAAa;AACnB,YAAMC,MAAM,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAArB;;AACA,UAAIF,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBxB,QAAAA,MAAM,CAACyB,IAAP,CAAY,QAAZ;AACD,OAFD,MAEO;AACLvB,QAAAA,QAAQ,CAACe,IAAI,CAACC,SAAL,CAAeI,MAAM,CAACrB,KAAtB,EAA6B,IAA7B,EAAmC,CAAnC,CAAD,CAAR;AACD;AACF,KAXD;AAYD,GAdD;;AAeA,sBACE;AAAA,4BACE;AAAA,8BACE;AACE,QAAA,QAAQ,EAAEO,aADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,WAAW,EAAC,OAJd;AAKE,QAAA,KAAK,EAAEH;AALT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,QAAQ,EAAEG,aADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,KAAK,EAAEF;AALT;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,QAAQ,EAAEE,aADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,WAAW,EAAC,UAJd;AAKE,QAAA,KAAK,EAAED;AALT;AAAA;AAAA;AAAA;AAAA,cAfF,eAsBE;AAAQ,QAAA,OAAO,EAAEM,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAyBGZ,KAAK,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAzBZ;AAAA,kBADF;AA6BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nexport default function Register() {\n  const router = useRouter()\n  const [error, setError] = useState(false)\n  const [formValues, setFormValues] = useState({\n    email: '',\n    name: '',\n    password: '',\n  })\n  const { email, password, name } = formValues\n\n  const onInputChange = e => {\n    setFormValues(prevFormValues => ({\n      ...prevFormValues,\n      [e.target.name]: e.target.value,\n    }))\n  }\n  const onSubmit = () => {\n    formValues\n    fetch('/api/register', {\n      method: 'POST',\n      body: JSON.stringify(formValues),\n      headers: { 'Content-Type': 'application/json' },\n    }).then(async res => {\n      const result = await res.json()\n      if (res.status === 200) {\n        router.push('/login')\n      } else {\n        setError(JSON.stringify(result.error, null, 4))\n      }\n    })\n  }\n  return (\n    <>\n      <div>\n        <input\n          onChange={onInputChange}\n          type='text'\n          name='email'\n          placeholder='email'\n          value={email}\n        />\n        <input\n          onChange={onInputChange}\n          type='text'\n          name='name'\n          placeholder='name'\n          value={name}\n        />\n        <input\n          onChange={onInputChange}\n          type='text'\n          name='password'\n          placeholder='password'\n          value={password}\n        />\n        <button onClick={onSubmit}>Submit</button>\n      </div>\n      {error && <pre>{error}</pre>}\n    </>\n  )\n}\n\n// export const getServerSideProps = async ctx => {\n//   const cookie = ctx.req?.headers.cookie\n//   console.log(cookie)\n//   // if (res.status === 401) {\n//   //   if (ctx.res) {\n//   //     ctx.res.setHeader('location', '/login')\n//   //     ctx.res.statusCode = 302\n//   //     return { props: {} }\n//   //   }\n//   // }\n//   return { props: {} }\n// }\n"]},"metadata":{},"sourceType":"module"}