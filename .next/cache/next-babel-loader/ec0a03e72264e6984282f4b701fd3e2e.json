{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/misha/Desktop/miauth/pages/me.jsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport cookie from 'cookie';\nimport { redirect } from 'next/dist/next-server/server/api-utils';\nexport default function Me({\n  user\n}) {\n  const router = useRouter();\n\n  if (!user) {\n    router.push('/login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\nexport const getServerSideProps = async ctx => {\n  const redirect = () => {\n    if (ctx.res) {\n      ctx.res.redirect('/login');\n      return {\n        props: {}\n      };\n    }\n  };\n\n  const authToken = cookie.parse(ctx.req.headers.cookie).auth;\n\n  if (!authToken) {\n    redirect();\n  }\n\n  const verifyed = jsonwebtoken.verify(authToken, this.cookieSecret);\n  const user = await database.findById({\n    Model: User,\n    id: verifyed.userId,\n    select: '-password'\n  });\n\n  if (!user) {\n    redirect();\n  }\n\n  return {\n    props: {\n      user\n    }\n  };\n};","map":{"version":3,"sources":["/Users/misha/Desktop/miauth/pages/me.jsx"],"names":["React","useRouter","cookie","redirect","Me","user","router","push","getServerSideProps","ctx","res","props","authToken","parse","req","headers","auth","verifyed","jsonwebtoken","verify","cookieSecret","database","findById","Model","User","id","userId","select"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,wCAAzB;AAEA,eAAe,SAASC,EAAT,CAAY;AAAEC,EAAAA;AAAF,CAAZ,EAAsB;AACnC,QAAMC,MAAM,GAAGL,SAAS,EAAxB;;AACA,MAAI,CAACI,IAAL,EAAW;AACTC,IAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAMC,GAAN,IAAa;AAC7C,QAAMN,QAAQ,GAAG,MAAM;AACrB,QAAIM,GAAG,CAACC,GAAR,EAAa;AACXD,MAAAA,GAAG,CAACC,GAAJ,CAAQP,QAAR,CAAiB,QAAjB;AACA,aAAO;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD;AACF,GALD;;AAMA,QAAMC,SAAS,GAAGV,MAAM,CAACW,KAAP,CAAaJ,GAAG,CAACK,GAAJ,CAAQC,OAAR,CAAgBb,MAA7B,EAAqCc,IAAvD;;AACA,MAAG,CAACJ,SAAJ,EAAe;AACbT,IAAAA,QAAQ;AACT;;AACD,QAAMc,QAAQ,GAAGC,YAAY,CAACC,MAAb,CAAoBP,SAApB,EAA+B,KAAKQ,YAApC,CAAjB;AAEA,QAAMf,IAAI,GAAG,MAAMgB,QAAQ,CAACC,QAAT,CAAkB;AACnCC,IAAAA,KAAK,EAAEC,IAD4B;AAEnCC,IAAAA,EAAE,EAAER,QAAQ,CAACS,MAFsB;AAGnCC,IAAAA,MAAM,EAAE;AAH2B,GAAlB,CAAnB;;AAKA,MAAI,CAACtB,IAAL,EAAW;AACTF,IAAAA,QAAQ;AACT;;AACD,SAAO;AAAEQ,IAAAA,KAAK,EAAE;AAAEN,MAAAA;AAAF;AAAT,GAAP;AACD,CAtBM","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport cookie from 'cookie'\nimport { redirect } from 'next/dist/next-server/server/api-utils'\n\nexport default function Me({ user }) {\n  const router = useRouter()\n  if (!user) {\n    router.push('/login')\n  }\n  return <div></div>\n}\n\nexport const getServerSideProps = async ctx => {\n  const redirect = () => {\n    if (ctx.res) {\n      ctx.res.redirect('/login')\n      return { props: {} }\n    }\n  }\n  const authToken = cookie.parse(ctx.req.headers.cookie).auth\n  if(!authToken) {\n    redirect()\n  }\n  const verifyed = jsonwebtoken.verify(authToken, this.cookieSecret)\n\n  const user = await database.findById({\n    Model: User,\n    id: verifyed.userId,\n    select: '-password',\n  })\n  if (!user) {\n    redirect()\n  }\n  return { props: { user } }\n}\n"]},"metadata":{},"sourceType":"module"}