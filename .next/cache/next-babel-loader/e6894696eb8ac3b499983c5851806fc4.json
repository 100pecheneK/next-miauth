{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/misha/Desktop/miauth/pages/me.jsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport cookie from 'cookie';\nimport User from '../models/User';\nimport database from '../core/Database/database';\n\nconst jsonwebtoken = require('jsonwebtoken');\n\nimport auth from '../utils/auth';\nexport default function Me({\n  user\n}) {\n  const router = useRouter();\n\n  if (!user) {\n    router.push('/login');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\nexport const getServerSideProps = async ctx => {\n  const redirect = () => {\n    if (ctx.res) {\n      ctx.res.redirect('/login');\n      return {\n        props: {}\n      };\n    }\n  };\n\n  try {\n    const session = await auth.getSession(ctx.req);\n    const user = await database.findById({\n      Model: User,\n      id: session.userId,\n      select: '-password'\n    });\n\n    if (!user) {\n      redirect();\n    }\n\n    return {\n      props: {\n        user\n      }\n    };\n  } catch (e) {\n    redirect();\n  }\n};","map":{"version":3,"sources":["/Users/misha/Desktop/miauth/pages/me.jsx"],"names":["React","useRouter","cookie","User","database","jsonwebtoken","require","auth","Me","user","router","push","getServerSideProps","ctx","redirect","res","props","session","getSession","req","findById","Model","id","userId","select","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,cAAD,CAA5B;;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,eAAe,SAASC,EAAT,CAAY;AAAEC,EAAAA;AAAF,CAAZ,EAAsB;AACnC,QAAMC,MAAM,GAAGT,SAAS,EAAxB;;AACA,MAAI,CAACQ,IAAL,EAAW;AACTC,IAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAMC,GAAN,IAAa;AAC7C,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAID,GAAG,CAACE,GAAR,EAAa;AACXF,MAAAA,GAAG,CAACE,GAAJ,CAAQD,QAAR,CAAiB,QAAjB;AACA,aAAO;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD;AACF,GALD;;AAOA,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACW,UAAL,CAAgBL,GAAG,CAACM,GAApB,CAAtB;AAEA,UAAMV,IAAI,GAAG,MAAML,QAAQ,CAACgB,QAAT,CAAkB;AACnCC,MAAAA,KAAK,EAAElB,IAD4B;AAEnCmB,MAAAA,EAAE,EAAEL,OAAO,CAACM,MAFuB;AAGnCC,MAAAA,MAAM,EAAE;AAH2B,KAAlB,CAAnB;;AAKA,QAAI,CAACf,IAAL,EAAW;AACTK,MAAAA,QAAQ;AACT;;AACD,WAAO;AAAEE,MAAAA,KAAK,EAAE;AAAEP,QAAAA;AAAF;AAAT,KAAP;AACD,GAZD,CAYE,OAAOgB,CAAP,EAAU;AACVX,IAAAA,QAAQ;AACT;AACF,CAvBM","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport cookie from 'cookie'\nimport User from '../models/User'\nimport database from '../core/Database/database'\nconst jsonwebtoken = require('jsonwebtoken')\nimport auth from '../utils/auth'\n\nexport default function Me({ user }) {\n  const router = useRouter()\n  if (!user) {\n    router.push('/login')\n  }\n  return <div></div>\n}\n\nexport const getServerSideProps = async ctx => {\n  const redirect = () => {\n    if (ctx.res) {\n      ctx.res.redirect('/login')\n      return { props: {} }\n    }\n  }\n\n  try {\n    const session = await auth.getSession(ctx.req)\n\n    const user = await database.findById({\n      Model: User,\n      id: session.userId,\n      select: '-password',\n    })\n    if (!user) {\n      redirect()\n    }\n    return { props: { user } }\n  } catch (e) {\n    redirect()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}